-- MySQL Script generated by MySQL Workbench
-- 11/08/16 23:34:18
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema FSCDatabase
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema FSCDatabase
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `FSCDatabase` DEFAULT CHARACTER SET utf8 ;
USE `FSCDatabase` ;

-- -----------------------------------------------------
-- Table `FSCDatabase`.`Stock`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FSCDatabase`.`Stock` ;

CREATE TABLE IF NOT EXISTS `FSCDatabase`.`Stock` (
  `Ticker` VARCHAR(10) NOT NULL,
  `CompanyName` VARCHAR(45) NULL,
  `LotSize` INT NULL,
  `TickSize` DECIMAL(20,2) NULL,
  `TotalVolume` INT NULL,
  PRIMARY KEY (`Ticker`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FSCDatabase`.`AccountRole`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FSCDatabase`.`AccountRole` ;

CREATE TABLE IF NOT EXISTS `FSCDatabase`.`AccountRole` (
  `RoleID` INT NOT NULL,
  `RoleName` VARCHAR(15) NULL,
  PRIMARY KEY (`RoleID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FSCDatabase`.`Account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FSCDatabase`.`Account` ;

CREATE TABLE IF NOT EXISTS `FSCDatabase`.`Account` (
  `CompanyID` VARCHAR(20) NOT NULL,
  `CompanyName` VARCHAR(30) NULL,
  `Password` VARCHAR(45) NULL,
  `RoleID` INT NULL,
  PRIMARY KEY (`CompanyID`),
  INDEX `fk_Account_AccountRole_idx` (`RoleID` ASC),
  CONSTRAINT `fk_Account_AccountRole`
    FOREIGN KEY (`RoleID`)
    REFERENCES `FSCDatabase`.`AccountRole` (`RoleID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FSCDatabase`.`Order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FSCDatabase`.`Order` ;

CREATE TABLE IF NOT EXISTS `FSCDatabase`.`Order` (
  `ClientOrderID` VARCHAR(45) NOT NULL,
  `Account_CompanyID` VARCHAR(20) NOT NULL,
  `ReceivedDate` DATE NOT NULL,
  `HandlingInstruction` CHAR(1) NULL,
  `Stock_Ticker` VARCHAR(6) NULL,
  `Side` CHAR(1) NULL,
  `OrderType` CHAR(1) NULL,
  `OrderQuantity` DECIMAL(12,2) NULL,
  `CashOrderQuantity` DECIMAL(12,2) NULL,
  `Price` DECIMAL(12,2) NULL,
  `LastStatus` INT NULL,
  `MsgSeqNum` INT NULL,
  `OnBehalfOfCompanyID` VARCHAR(45) NULL,
  `SenderSubID` VARCHAR(45) NULL,
  PRIMARY KEY (`ClientOrderID`, `Account_CompanyID`, `ReceivedDate`),
  INDEX `fk_Order_Stock1_idx` (`Stock_Ticker` ASC),
  INDEX `fk_Order_Account1_idx` (`Account_CompanyID` ASC),
  CONSTRAINT `fk_Order_Stock1`
    FOREIGN KEY (`Stock_Ticker`)
    REFERENCES `FSCDatabase`.`Stock` (`Ticker`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Order_Account1`
    FOREIGN KEY (`Account_CompanyID`)
    REFERENCES `FSCDatabase`.`Account` (`CompanyID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FSCDatabase`.`OrderExecution`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FSCDatabase`.`OrderExecution` ;

CREATE TABLE IF NOT EXISTS `FSCDatabase`.`OrderExecution` (
  `ExecutionID` INT NOT NULL AUTO_INCREMENT,
  `OrderExecutionQuantity` DECIMAL(12,2) NULL,
  `OrderExecutionPrice` DECIMAL(12,2) NULL,
  `ExecutionTime` TIMESTAMP NULL,
  `MsgSeqNum` INT NULL,
  `Order_BuyClientOrderID` VARCHAR(45) NOT NULL,
  `Order_BuyCompanyID` VARCHAR(20) NOT NULL,
  `Order_BuyReceivedDate` DATE NULL,
  `Order_SellClientOrderID` VARCHAR(45) NOT NULL,
  `Order_SellCompanyID` VARCHAR(20) NOT NULL,
  `Order_SellReceivedDate` DATE NULL,
  PRIMARY KEY (`ExecutionID`),
  INDEX `fk_OrderExecution_Order1_idx` (`Order_BuyClientOrderID` ASC, `Order_BuyCompanyID` ASC, `Order_BuyReceivedDate` ASC),
  INDEX `fk_OrderExecution_Order2_idx` (`Order_SellClientOrderID` ASC, `Order_SellCompanyID` ASC, `Order_SellReceivedDate` ASC),
  CONSTRAINT `fk_OrderExecution_Order1`
    FOREIGN KEY (`Order_BuyClientOrderID` , `Order_BuyCompanyID` , `Order_BuyReceivedDate`)
    REFERENCES `FSCDatabase`.`Order` (`ClientOrderID` , `Account_CompanyID` , `ReceivedDate`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_OrderExecution_Order2`
    FOREIGN KEY (`Order_SellClientOrderID` , `Order_SellCompanyID` , `Order_SellReceivedDate`)
    REFERENCES `FSCDatabase`.`Order` (`ClientOrderID` , `Account_CompanyID` , `ReceivedDate`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FSCDatabase`.`StockHistory`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FSCDatabase`.`StockHistory` ;

CREATE TABLE IF NOT EXISTS `FSCDatabase`.`StockHistory` (
  `Ticker` VARCHAR(10) NOT NULL,
  `LastMatchPrice` DECIMAL(2) NULL,
  `LastMatchTime` DATETIME NULL,
  `LastOpenPrice` DECIMAL(2) NULL,
  `LastClosePrice` DECIMAL(2) NULL,
  `CurrentPrice` DECIMAL(2) NULL,
  `CurrentVolume` INT NULL,
  PRIMARY KEY (`Ticker`),
  INDEX `fk_StockHistory_Stock1_idx` (`Ticker` ASC),
  CONSTRAINT `fk_StockHistory_Stock1`
    FOREIGN KEY (`Ticker`)
    REFERENCES `FSCDatabase`.`Stock` (`Ticker`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FSCDatabase`.`OrderCancel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FSCDatabase`.`OrderCancel` ;

CREATE TABLE IF NOT EXISTS `FSCDatabase`.`OrderCancel` (
  `Ticker` VARCHAR(45) NULL,
  `Side` INT NULL,
  `ReceivedTime` TIMESTAMP NULL,
  `LastStatus` INT NULL,
  `MsgSeqNum` INT NULL,
  `Order_ClientOrderID` VARCHAR(45) NOT NULL,
  `Order_Account_CompanyID` VARCHAR(20) NOT NULL,
  `Order_ReceivedDate` DATE NULL,
  `OrderCancelID` VARCHAR(45) NOT NULL,
  `ClientOrderID` VARCHAR(45) NOT NULL,
  `CancelQuantity` VARCHAR(45) NULL,
  `ExecutionTime` TIMESTAMP NULL,
  PRIMARY KEY (`OrderCancelID`),
  CONSTRAINT `fk_OrderCancel_Order1`
    FOREIGN KEY (`Order_ClientOrderID` , `Order_Account_CompanyID` , `Order_ReceivedDate`)
    REFERENCES `FSCDatabase`.`Order` (`ClientOrderID` , `Account_CompanyID` , `ReceivedDate`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FSCDatabase`.`Session`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FSCDatabase`.`Session` ;

CREATE TABLE IF NOT EXISTS `FSCDatabase`.`Session` (
  `SessionID` INT NOT NULL AUTO_INCREMENT,
  `Account_UserID` VARCHAR(20) NOT NULL,
  `BeginOfSession` TIMESTAMP NULL,
  PRIMARY KEY (`SessionID`),
  INDEX `fk_Sessions_Account1_idx` (`Account_UserID` ASC),
  CONSTRAINT `fk_Sessions_Account1`
    FOREIGN KEY (`Account_UserID`)
    REFERENCES `FSCDatabase`.`Account` (`CompanyID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
