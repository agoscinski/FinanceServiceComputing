Account
A user account is used my clients to connect to the server
CompanyID: the ID of the company when the company registered
CompanyName: the name of the company with companyID
Password: the password of the company
RoleID: the role of the user, if he is has admin rights (1) or no admin rights (0)


Order
An order is an offered order by client to buy or sell stocks. It can be
ClientOrderID: The ID how the client identifies this order
Account_CompanyID: The ID of the company making the order
ReceivedTime: The date when the order was first accepted
HandlingInstruction: The way the order should be handled (we only support the values 1 = Automated execution order, private, no Broker intervention)
Stock_Ticker: The ticker symbol the order is related to
Side: Describes the type of Order (we only support the values 1 = Buy, 2 = Sell)
OrderType (we only support the values 1 = Market, 2 = Limit)
OrderQuantity: The total quantity of the order (be careful, it could be that the order is partially fulfilled, therefore it has to be checked if there exist
CashOrderQuantity: Defines (is not supported)
Price
LastStatus: 0:Done, 1:Pending, 2: Canceled
MsqSeqNum:
OnBehalfOfCompanyID:
SenderSubID:


OrderCancel
OrderCancelID: The same as OrderID in FIX Cancel Order request
Order_ClientOrderID: The same as OrigClientOrderID in FIX Cancel Order request
ClientOrderID: The same as ClientOrderID in FIX Cancel Order request


init script file format
A line with a file has this format:
source FILE_PATH
A line with a comment has this format
-- COMMENT_TEXT


-- -----------------------------------------------------
-- Schema FSCDatabase
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `FSCDatabase` ;

-- -----------------------------------------------------
-- Schema FSCDatabase
-- -----------------------------------------------------

USE `FSCDatabase` ;


        order_id (string): order id <- from database
        client_order_id (string): client order id <- from last order
        execution_id (string): execution id <- database
        execution_transaction_type (char): execution transaction type <- serverlogic
        execution_type (char): execution type <- serverlogic
        order_status = order status (char) <- serverlogic
        symbol = symbol (String) <- order
        side = side (char) <- order
        leaves_qty = quantity leaves to be fulfiled (float) <- serverLogic
        cum_qty = cumulative quantity (float) <- 0 ServerLogic
        avg_px = average price (float) <- 0 serverlogic
        price = price (float) <- order
        stop_px = stop price (float) <- order
